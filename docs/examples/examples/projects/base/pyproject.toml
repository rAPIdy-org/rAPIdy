[tool.poetry]
name = "src"
version = "0.1.0"
description = ""
authors = ["Daniil Grois <daniil.grois@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
rapidy = "^1.0.0"
pydantic-settings = "^2.7.1"
dishka = "^1.4.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.1"
pytest-cov = "^6.0.0"
pytest-httpserver = "^1.1.0"
diff-cover = "^9.2.1"

[tool.ruff]
src = ["src", "tests"]
line-length = 120
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "FA102", #  Missing `from __future__ import annotations`
]

[tool.ruff.lint.isort]
known-local-folder = ["src", "tests"]
extra-standard-library = ["typing_extensions"]
section-order = ["future", "standard-library", "first-party", "third-party", "local-folder"]
combine-as-imports = true
force-wrap-aliases = true
order-by-type = false

[tool.ruff.lint.per-file-ignores]
"src/middlewares.py" = ["TRY201", "G004"]

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.format]
indent-style = "space"

[tool.mypy]
pretty = true
ignore_missing_imports = true
check_untyped_defs = true
strict = true
show_error_codes = true
show_column_numbers = true
warn_return_any = false
allow_subclassing_any = true
implicit_reexport = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
